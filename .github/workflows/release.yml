name:
on:
  push:
    tags: [ v* ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Release CI
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: install dependencies
        run: npm install
      - name: build
        run: npm run build
      - name: compress
        working-directory: build
        run: |
          tar -zcf ../${{ github.event.repository.name }}-${{ github.ref_name }}.tar.gz *
          zip -rq ../${{ github.event.repository.name }}-${{ github.ref_name }}.zip *
      - name: upload artifact
        uses: actions/upload-artifact@v4
        id: upload-artifact-step
        with:
          name: ${{ github.event.repository.name }}-${{ github.ref_name }}
          path: build
      - name: create draft release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          files: |
            ${{ github.event.repository.name }}-${{ github.ref_name }}.tar.gz
            ${{ github.event.repository.name }}-${{ github.ref_name }}.zip
          draft: true
          generate_release_notes: true

  docker:
    name: Docker Image CI
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Log into the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
